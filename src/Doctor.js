"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

// Generated by CoffeeScript 1.10.0

var request = require('request');

var Doctor = function () {
  function Doctor() {
    _classCallCheck(this, Doctor);

    console.log("Doctor: Hi, I'm a doctor.");
  }

  //examine


  _createClass(Doctor, null, [{
    key: "examine",
    value: function examine(site, callback, msg) {
      console.log("Doctor: well, I'm examing."); //@@
      var options = {
        url: site.url
      };
      var message = {};
      request.get(options, function (err, res, body) {
        if (err) {
          message = {
            "status": "error",
            "statusCode": null,
            "discription": "ERROR: \"" + site.url + "\" Connection fail."
          };
          callback(message, msg);
        } else if (res.statusCode === site.status) {
          message = {
            "status": "matched",
            "statusCode": "" + res.statusCode,
            "discription": "SUCCESS: \"" + site.url + "\" has been alive :)"
          };
          callback(message, msg);
        } else if (res.statusCode !== site.status) {
          message = {
            "status": "unmatched",
            "statusCode": "" + res.statusCode,
            "discription": "ERROR: \"" + site.url + "\" [expect]: \"" + site.status + "\", [actual]: \"" + res.statusCode + "\""
          };
          callback(message, msg);
        }
      });
    }
  }]);

  return Doctor;
}();

module.exports.Doctor = Doctor;
